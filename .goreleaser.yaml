# GoReleaser configuration for goctx
# See https://goreleaser.com for detailed docs.

version: 2

project_name: goctx

env:
  - CGO_ENABLED=0

before:
  hooks:
    # Keep modules tidy before building artifacts
    - go mod tidy

builds:
  - id: goctx
    main: ./app/goctx
    binary: goctx
    flags:
      - -trimpath
    ldflags:
      # Keep it minimal and safe; no package vars assumed.
      - -s -w
      # Inject version metadata so the binary can print it without shelling out.
      - -X github.com/preminger/goctx/cmd/goctx.Version={{ .Version }}
      - -X github.com/preminger/goctx/cmd/goctx.Commit={{ .FullCommit }}
      - -X github.com/preminger/goctx/cmd/goctx.BuildDate={{ .Date }}
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    # Optionally exclude unsupported combos here
    # ignore:
    #   - goos: darwin
    #     goarch: 386

archives:
  - id: default
    ids:
      - goctx
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"

checksum:
  name_template: "checksums.txt"

snapshot:
  version_template: "{{ .Tag }}-dev"

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^chore:'
      - '^test:'

homebrew:
  - name: goctx
    ids:
      - goctx
    # Restrict to the OS/ARCH combos we actually build to avoid archive lookup errors.
    goos:
      - darwin
      - linux
    goarch:
      - amd64
      - arm64
    tap:
      owner: preminger
      name: homebrew-tap
    commit_author:
      name: github-actions[bot]
      email: 41898282+github-actions[bot]@users.noreply.github.com
    homepage: "https://github.com/preminger/goctx"
    description: "Propagate context.Context through Go call graphs automatically."
    license: "MIT"
    test: |
      system "#{bin}/goctx", "version"

release:
  # By default, GoReleaser infers GitHub/GitLab repo from the git remote.
  # This section can be extended if needed (e.g., to set draft, discussion category, etc.).
  draft: false
